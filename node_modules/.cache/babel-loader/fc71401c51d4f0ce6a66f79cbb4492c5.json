{"ast":null,"code":"import _classCallCheck from \"/Users/zachnusbaum/Downloads/react-temp-convert/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zachnusbaum/Downloads/react-temp-convert/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zachnusbaum/Downloads/react-temp-convert/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zachnusbaum/Downloads/react-temp-convert/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zachnusbaum/Downloads/react-temp-convert/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zachnusbaum/Downloads/react-temp-convert/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zachnusbaum/Downloads/react-temp-convert/src/components/temperature-input.js\";\nimport React from 'react';\nvar scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\nexport var TemperatureInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TemperatureInput, _React$Component);\n\n  function TemperatureInput(props) {\n    var _this;\n\n    _classCallCheck(this, TemperatureInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TemperatureInput).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TemperatureInput, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.props.onTemperatureChange(e.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var temperature = this.props.temperature;\n      var scale = this.props.scale;\n      return React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Enter temperature in \", scaleNames[scale], \":\"), React.createElement(\"input\", {\n        value: temperature,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TemperatureInput;\n}(React.Component);","map":{"version":3,"sources":["/Users/zachnusbaum/Downloads/react-temp-convert/src/components/temperature-input.js"],"names":["React","scaleNames","c","f","TemperatureInput","props","handleChange","bind","e","onTemperatureChange","target","value","temperature","scale","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,CAAC,EAAE,SADc;AAEjBC,EAAAA,CAAC,EAAE;AAFc,CAAnB;AAKA,WAAaC,gBAAb;AAAA;AAAA;AAAA;;AACE,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AAFiB;AAGlB;;AAJH;AAAA;AAAA,iCAMeC,CANf,EAMkB;AACd,WAAKH,KAAL,CAAWI,mBAAX,CAA+BD,CAAC,CAACE,MAAF,CAASC,KAAxC;AACD;AARH;AAAA;AAAA,6BAUW;AACP,UAAMC,WAAW,GAAG,KAAKP,KAAL,CAAWO,WAA/B;AACA,UAAMC,KAAK,GAAG,KAAKR,KAAL,CAAWQ,KAAzB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA8BZ,UAAU,CAACY,KAAD,CAAxC,MADF,EAEE;AAAO,QAAA,KAAK,EAAED,WAAd;AACO,QAAA,QAAQ,EAAE,KAAKN,YADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAOD;AApBH;;AAAA;AAAA,EAAsCN,KAAK,CAACc,SAA5C","sourcesContent":["import React from 'react';\n\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nexport class TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input value={temperature}\n               onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}