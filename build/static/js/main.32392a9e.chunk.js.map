{"version":3,"sources":["components/boiling-verdict.js","components/temperature-input.js","utils/converters.js","components/calculator.js","index.js"],"names":["BoilingVerdict","props","celsius","react_default","a","createElement","scaleNames","c","f","TemperatureInput","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","inherits","createClass","key","value","e","onTemperatureChange","target","temperature","scale","onChange","React","Component","toCelsius","fahrenheit","toFahrenheit","tryConvert","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState","temperature_input_TemperatureInput","App","calculator_Calculator","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.32392a9e.chunk.js","sourcesContent":["import React from 'react';\nexport function BoilingVerdict(props) {\n  if(props.celsius >= 100) {\n    return <p>The water would boil.</p>;\n  } else {\n    return <p>The water would not boil, you fool.</p>;\n  }\n}","import React from 'react';\n\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nexport class TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input value={temperature}\n               onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}","export function toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nexport function toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n\nexport function tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}","import React from 'react';\nimport { BoilingVerdict } from './boiling-verdict';\nimport { TemperatureInput } from './temperature-input';\n\nimport { tryConvert, toCelsius, toFahrenheit } from '../utils/converters';\n\nexport class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = { temperature: '', scale: 'c' }\n  }\n\n  handleChange(e) {\n    this.setState({ temperature: e.target.value });\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({ scale: 'c', temperature });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({ scale: 'f', temperature });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n    return (\n      <div>\n        <TemperatureInput scale=\"c\" temperature={celsius} onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput scale=\"f\" temperature={fahrenheit} onTemperatureChange={this.handleFahrenheitChange} />\n        <BoilingVerdict\n          celsius={parseFloat(celsius)} />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './style.css';\n\nimport {Calculator} from './components/calculator';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Calculator />\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}